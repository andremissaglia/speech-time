(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))c(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&c(d)}).observe(document,{childList:!0,subtree:!0});function t(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(a){if(a.ep)return;a.ep=!0;const s=t(a);fetch(a.href,s)}})();const m=document.getElementById("participantList"),f=document.getElementById("participantName"),E=document.getElementById("addParticipant"),I=document.getElementById("resetStatistics"),p=document.getElementById("statistics");let r=[],i={},o={};function y(){const e=f.value.trim();e&&!r.find(n=>n.name===e)&&(r.push({name:e,speechTime:0,speechCount:0}),f.value="",u(),l())}E.addEventListener("click",y);f.addEventListener("keypress",e=>{e.key==="Enter"&&(e.preventDefault(),y())});I.addEventListener("click",b);function u(){m.innerHTML="",r.forEach((e,n)=>{const t=document.createElement("div");t.className="participant-info";const c=i[e.name]?"active":"";t.innerHTML=`
        <button data-index="${n}" class="play-pause material-icons ${c}">play_arrow</button>
        <span>${e.name}</span>
        <button data-index="${n}" class="remove material-icons">delete</button>
    `,m.appendChild(t)}),document.querySelectorAll(".play-pause").forEach(e=>{e.addEventListener("click",L)}),document.querySelectorAll(".remove").forEach(e=>{e.addEventListener("click",T)})}function L(e){const n=parseInt(e.target.dataset.index),t=r[n],c=e.target;if(i[t.name]){clearInterval(i[t.name]),delete i[t.name],c.classList.remove("active");const a=(Date.now()-o[t.name])/1e3;t.speechTime+=a,delete o[t.name],Object.keys(i).length===0&&statisticsUpdateInterval&&(clearInterval(statisticsUpdateInterval),statisticsUpdateInterval=null)}else Object.keys(i).forEach(a=>{clearInterval(i[a]);const s=r.find(g=>g.name===a),d=(Date.now()-o[a])/1e3;s.speechTime+=d,delete o[a];const h=m.querySelector(`button.play-pause[data-index="${r.indexOf(s)}"]`);h&&h.classList.remove("active"),delete i[a]}),t.speechCount++,o[t.name]=Date.now(),i[t.name]=setInterval(()=>{},1e3),c.classList.add("active");l()}function T(e){const n=parseInt(e.target.dataset.index),t=r[n];i[t.name]&&(clearInterval(i[t.name]),delete i[t.name],delete o[t.name]),r.splice(n,1),u(),l()}function l(){const e=r.reduce((n,t)=>n+v(t),0);if(p.innerHTML="",r.length===0){p.innerHTML="<p>No participants yet.</p>";return}r.map(n=>{let t=v(n);const c=e>0?(t/e*100).toFixed(2):0,a=document.createElement("p");return a.textContent=`${n.name}: ${c}% (${n.speechCount} speaks, ${t.toFixed(2)}s)`,{element:a,timer:t}}).sort((n,t)=>t.timer-n.timer).forEach(({element:n})=>{p.appendChild(n)})}function v(e){let n=e.speechTime;return i[e.name]&&(n+=(Date.now()-o[e.name])/1e3),n}function b(){r.forEach(e=>{e.speechTime=0,e.speechCount=0}),i={},o={},u(),l()}u();l();setInterval(l,100);
