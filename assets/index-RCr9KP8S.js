(function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const d of s.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&r(d)}).observe(document,{childList:!0,subtree:!0});function n(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function r(e){if(e.ep)return;e.ep=!0;const s=n(e);fetch(e.href,s)}})();const m=document.getElementById("participantList"),f=document.getElementById("participantName"),g=document.getElementById("addParticipant"),E=document.getElementById("resetStatistics"),u=document.getElementById("statistics");let c=[],i={},o={};function v(){const t=f.value.trim();t&&!c.find(a=>a.name===t)&&(c.push({name:t,speechTime:0,speechCount:0}),f.value="",p(),l())}g.addEventListener("click",v);f.addEventListener("keypress",t=>{t.key==="Enter"&&(t.preventDefault(),v())});E.addEventListener("click",T);function p(){m.innerHTML="",c.forEach((t,a)=>{const n=document.createElement("div");n.className="participant-info";const r=i[t.name]?"active":"";n.innerHTML=`
        <button data-index="${a}" class="play-pause material-icons ${r}">play_arrow</button>
        <span>${t.name}</span>
        <button data-index="${a}" class="remove material-icons">delete</button>
    `,m.appendChild(n)}),document.querySelectorAll(".play-pause").forEach(t=>{t.addEventListener("click",I)}),document.querySelectorAll(".remove").forEach(t=>{t.addEventListener("click",L)})}function I(t){const a=parseInt(t.target.dataset.index),n=c[a],r=t.target;if(i[n.name]){clearInterval(i[n.name]),delete i[n.name],r.classList.remove("active");const e=(Date.now()-o[n.name])/1e3;n.speechTime+=e,delete o[n.name],Object.keys(i).length===0&&statisticsUpdateInterval&&(clearInterval(statisticsUpdateInterval),statisticsUpdateInterval=null)}else Object.keys(i).forEach(e=>{clearInterval(i[e]);const s=c.find(y=>y.name===e),d=(Date.now()-o[e])/1e3;s.speechTime+=d,delete o[e];const h=m.querySelector(`button.play-pause[data-index="${c.indexOf(s)}"]`);h&&h.classList.remove("active"),delete i[e]}),n.speechCount++,o[n.name]=Date.now(),i[n.name]=setInterval(()=>{},1e3),r.classList.add("active");l()}function L(t){const a=parseInt(t.target.dataset.index),n=c[a];i[n.name]&&(clearInterval(i[n.name]),delete i[n.name],delete o[n.name]),c.splice(a,1),p(),l()}function l(){console.log("Updating statistics...");const t=c.reduce((a,n)=>a+n.speechTime,0);if(u.innerHTML="",c.length===0){u.innerHTML="<p>No participants yet.</p>";return}c.forEach(a=>{const n=t>0?(a.speechTime/t*100).toFixed(2):0,r=document.createElement("p");let e=a.speechTime;i[a.name]&&(e+=(Date.now()-o[a.name])/1e3),r.textContent=`${a.name}: ${n}% (${a.speechCount} speaks, ${e.toFixed(2)}s)`,u.appendChild(r)})}function T(){c.forEach(t=>{t.speechTime=0,t.speechCount=0}),i={},o={},p(),l()}p();l();setInterval(l,100);
