(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(e){if(e.ep)return;e.ep=!0;const a=n(e);fetch(e.href,a)}})();const f=document.getElementById("participantList"),h=document.getElementById("participantName"),E=document.getElementById("addParticipant"),L=document.getElementById("resetStatistics"),u=document.getElementById("statistics");let r=[],s={},l={},T=null;function y(){const t=h.value.trim();t&&!r.find(c=>c.name===t)&&(r.push({name:t,speechTime:0,speechCount:0}),h.value="",m(),d())}E.addEventListener("click",y);h.addEventListener("keypress",t=>{t.key==="Enter"&&(t.preventDefault(),y())});L.addEventListener("click",S);function m(){f.innerHTML="",r.forEach((t,c)=>{const n=document.createElement("div");n.className="participant-info";const i=s[t.name]?"active":"";n.innerHTML=`
        <button data-index="${c}" class="play-pause material-icons ${i}">play_arrow</button>
        <span>${t.name}</span>
        <button data-index="${c}" class="remove material-icons">delete</button>
    `,f.appendChild(n)}),document.querySelectorAll(".play-pause").forEach(t=>{t.addEventListener("click",I)}),document.querySelectorAll(".remove").forEach(t=>{t.addEventListener("click",P)})}function I(t){const c=parseInt(t.target.dataset.index),n=r[c],i=t.target;if(s[n.name]){clearInterval(s[n.name]),delete s[n.name],i.classList.remove("active");const e=(Date.now()-l[n.name])/1e3;n.speechTime+=e,delete l[n.name],Object.keys(s).length}else Object.keys(s).forEach(e=>{clearInterval(s[e]);const a=r.find(g=>g.name===e),o=(Date.now()-l[e])/1e3;a.speechTime+=o,delete l[e];const p=f.querySelector(`button.play-pause[data-index="${r.indexOf(a)}"]`);p&&p.classList.remove("active"),delete s[e]}),n.speechCount++,l[n.name]=Date.now(),s[n.name]=setInterval(()=>{},1e3),i.classList.add("active");d()}function P(t){const c=parseInt(t.target.dataset.index),n=r[c];s[n.name]&&(clearInterval(s[n.name]),delete s[n.name],delete l[n.name]),r.splice(c,1),m(),d()}function d(){const t=r.reduce((e,a)=>e+v(a),0);u.innerHTML="";const c=document.querySelector("#score");if(r.length===0){u.innerHTML="<p>No participants yet.</p>",c.textContent="Participation score: -/5";return}const n=r.map(e=>{let a=v(e);const o=t>0?a/t*100:0;return{participant:e,speechTime:a,percentage:o}});n.sort((e,a)=>a.speechTime-e.speechTime).forEach(({participant:e,speechTime:a,percentage:o})=>{const p=b(e.name,e.speechCount,a,o);u.appendChild(p)});const i=x(n);c.textContent=`Participation score: ${i.toFixed(2)}/5`}function x(t){const c=Math.max(...t.map(i=>i.percentage)),n=Math.min(...t.map(i=>i.percentage));return 5-(c-n)*5/100}function b(t,c,n,i){const e=`${t}: ${i.toFixed(2)}% (${c} speaks, ${n.toFixed(2)}s)`,a=document.createElement("div");return a.className="participant-statistic",a.innerHTML=`
  <div class="progress-bar" style="width: ${i}%"></div>
      <p>${e}</p>
  `,a}function v(t){let c=t.speechTime;return s[t.name]&&(c+=(Date.now()-l[t.name])/1e3),c}function S(){r.forEach(t=>{t.speechTime=0,t.speechCount=0}),s={},l={},m(),d()}m();d();setInterval(d,100);
